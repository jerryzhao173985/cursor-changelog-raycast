{
    "markdown": "# Changelog\n\nNew updates and improvements\n\n0.48.x\n\n## [Chat tabs, Custom modes & Faster indexing](https://www.cursor.com/changelog/chat-tabs-custom-modes-sound-notification)\n\nThis release introduces chat tabs for parallel conversations, a redesigned\nmodes system with custom modes, and improvements to cost visibility, indexing\nperformance, and MCP reliability. Additionally, a sound notification plays when a chat is finished\n\n### Built-in modes & custom modes (beta)\n\nAgent and Ask modes are the built-in modes in Cursor, now with the option to add custom modes. We've also renamed \"Edit\" to \"Manual\" to better reflect its behavior.\n\nAsk mode now has access to all search tools by default, so the `@Codebase` tool has been removed. It will automatically search the codebase when needed. If you want to force a search, simply ask Cursor in natural language to \"search the codebase\". You can disable search from Ask in the mode menu, which will result in Ask only seeing the context you have provided.\n\nRead more about [Agent](https://docs.cursor.com/chat/agent) and [Ask](https://docs.cursor.com/chat/ask).\n\n![Modes](https://www.cursor.com/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fmodes.405d21ab.png&w=3840&q=75)\n\n**Custom modes** (beta) allow you to compose new modes with tools and prompts that fit your workflow. Since custom modes can have custom keybindings, **\u2318I will default to Agent mode** and **\u2318L** will toggle the side pane. If you unbind \u2318I, it will also toggle the side pane. Custom modes are currently in beta, and you can enable them from Settings \u2192 Features \u2192 Chat \u2192 Custom modes.\n\nYou can also set the default mode from settings (Settings \u2192 Features \u2192 Chat \u2192 Default chat mode) to one of your modes or to the one you used most recently.\n\nRead more about [custom modes](https://docs.cursor.com/chat/custom-modes).\n\n![custom modes](https://www.cursor.com/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fcustom-modes.19f7c3f2.png&w=3840&q=75)\n\n### Chat tabs\n\nCreate new tabs (\u2318T) in chat to have multiple conversations in parallel. You can also hold Option and click the + button to create a new tab. Cmd+N still creates a new chat in the current tab\n\nWhen a tab is awaiting your input, you'll see an orange dot on that tab.\n\nYour browser does not support the video tag.\n\n### Faster indexing\n\nWe've made significant improvements to indexing performance of similar codebases within a team, greatly reducing the initial indexing time for subsequent copies of large repositories after one copy has been fully indexed. For example, the Cursor codebase now indexes in under a minute, previously taking around 20 minutes.\n\n### Sound notification (beta)\n\nCursor can now play a sound when a chat is ready for review. Enable this feature from Settings \u2192 Features \u2192 Chat \u2192 Play sound on finish.\n\n### Usage-based cost visibility\n\nFor usage-based models, you can now view the cost and breakdown per chat from the history.\n\n![Cost visibility](https://www.cursor.com/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fchat-cost.b7b36dda.png&w=3840&q=75)\n\n### New onboarding\n\nWe've introduced an easier onboarding process to help you get started with Cursor. You'll be guided through importing settings, selecting themes, keybindings, and other preferences.\n\n![onboarding](https://www.cursor.com/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fonboarding.8382148d.png&w=3840&q=75)\n\n### Other\n\n- Improved indexing performance for teams sharing codebases\n- The vertical sidebar option will temporarily be unavailable for users who opted into Early Access\n- Projects with MCP servers will now prompt users to enable them\n- Chat will now display a notification about usage-based pricing when approaching fast request or usage limits\n- Enhanced visibility of auto-run controls configured by team admins, clarifying when they are active\n- Removed auto-run prompt due to reliability issues. Auto-run has been disabled for all users who previously enabled it\n\n### Improvements\n\n- We've moved \"reject all diffs\" from Cmd+Backspace (\u2318\u232b) to Cmd+Shift+Backspace (\u2318\u21e7\u232b)\n- MCP on Windows should now be significantly more reliable\n- Improved MCP error messages when configuring MCP servers to assist with debugging\n- Added input token count for chat messages (click the three dots to view). We're continuing to improve context visibility so you can clearly see what gets sent to the model, expect more soon!\n\n### Patches\n\n- 0.48.1 - New onboarding\n- 0.48.2 - Allows users to accept/reject file edited in another chat tab.\n- 0.48.3 - Chat Tabs UX improvements (Cmd/Ctrl+T for new tab), Max-mode support for Gemini 2.5 Pro\n- 0.48.4 - Image support for Gemini 2.5 Pro\n- 0.48.5 - Change management for Cmd+Backspace -> Cmd+Shift+Backspace\n- 0.48.6 - Creates a new chat after the AI Pane has been closed for long enough\n- 0.48.7 - Fixes an issue where some chats could get deleted on update\n- 0.48.8 - Improves CPU performance from @-symbols search\n\n0.47.x\n\n## [Reliability, Keyboard Shortcuts & Early access opt-in](https://www.cursor.com/changelog/reliability-keyboard-shortcuts-early-access-opt-in)\n\nThis release focuses mainly on stability and performance improvements to make existing features work better.\n\n- **Memory Usage and Performance**: The new release uses less memory and is more stable.\n- **Keyboard Shortcuts**: All keyboard shortcuts are now available in the Keyboard Shortcuts menu. Go to Settings > Keyboard Shortcuts to modify or add new shortcuts.\n- **Early access opt-in**: You can now opt in to early access from Settings > Beta > Update frequency.\n- **Auto select model**: We choose the most appropriate premium model for the task at hand based on performance, speed, and availability so you get performance even during model degradation or outages.\n- **Themes**: New and updated themes including Cursor Dark, Cursor Midnight, and Cursor Dark (High contrast).\n- **UI improvements**: Improved tool calling UI, thinking UI and error messages in chat. We've also added a new update notification in the app to make it clearer when a new version is available.\n- **Rules**: Allow nested `.cursor/rules` directories and improved UX to make it clearer when rules are being applied.\n- **MCP**: Added global server configuration with `~/.cursor/mcp.json` and support for environment variables.\n- **Sonnet 3.7 thinking**: We've made a few improvements to 3.7 prompting. Thinking will now cost 2 requests instead of 1. More improvements will be rolling out in the coming days.\n- **Ignore files**: Improved `.cursorignore` behavior to more consistently exclude files\n- **Upload multiple images**: You can now upload multiple images at once in chat.\n\n**Patches**\n\n- 0.47.1: Improved performance, added back play button to apply code blocks\n- 0.47.2: Cursor Tab accepts work with single-line selections\n- 0.47.3: Fixes an issue with tool call errors on file edits\n- 0.47.4: Fixes an edge case where red diffs stick around in the editor\n- 0.47.5: Client-side support for upcoming MAX mode compatbility for Claude 3.7 Sonnet\n- 0.47.6: Faster applies, warns user when edits fails because of cursorignore\n- 0.47.7: MAX mode for 3.7 Sonnet with and without thinking\n- 0.47.8: UI fix for scrollable model name\n- 0.47.9: Performance improvements related to memory usage\n\n0.46.x\n\n## [Agent is ready and UI refresh](https://www.cursor.com/changelog/agent-is-ready-and-ui-refresh)\n\n- **Agent is ready**: Agent is now the default mode, bringing a more powerful and unified AI experience. No more confusion between Chat, Composer, and Agent - just one smart interface that adapts to your needs.\n\n- **UI refresh**: Phase one of a fresh coat of paint with new default Cursor themes designed for focus. We've also simplified the @-context menu to make Agent more precise.\n\n- **Web search**: Agent can now automatically search the web for up-to-date information without requiring explicit @Web commands.\n\n- **Ignore files**: `.cursorignore` now blocks files from being added in chat or sent up for tab completions, in addition to ignoring them from indexing. We've introduced `.cursorindexingignore` for specifically controlling file indexing.\n\n- **Agent tool limit**: Upon reaching the 25 tool call limit, you can press \"continue\" to proceed (counts as a new request).\n\n- **Project rules**: \\- New capability to apply rules globally and a visual indicator for when rules will be applied\n\n- **MCP improvements**:\n\n\n- Agent can now automatically run MCP tools with Yolo mode\n- Configure Project Servers with `<project-root>/.cursor/mcp.json`\n- Support for Agent to use MCP resources as context\n\n- **Tab rebinding**: Tab suggestions can now be rebound to a different keybinding using editor.action.acceptCursorTabSuggestion\n\n\n**Fixes**\n\n- **Crashes**: Enhanced stability through memory and performance improvements, with additional crash prevention systems in place.\n- **MCP**: Improved reliability and quality of life enhancements for building MCP servers in Cursor.\n- **Windows**: Fixed newline errors in Chat Codeblocks and resolved auto-uninstallation issues.\n\n**Patches**\n\n- 0.46.1: Fixed HTTP2 and system certificate errors, resolved memory leaks\n- 0.46.2: Improved MCP reliability, added option to disable yolo mode for MCP\n- 0.46.3: Enhanced download reliability, fixed keybinding issue\n- 0.46.4: Added support for multiple image attachments and fixed \"User aborted request\" error\n- 0.46.5: Resolved issues with extended tool calls, long Composer sessions, and retry functionality\n- 0.46.6: Improved Windows installation process\n- 0.46.7: Improved memory usage and performance\n- 0.46.8: Fix for windows 'rename tools' update error, fix for some users unable to cancel agent terminal commands\n- 0.46.9: Memory and performances fixes, composer/chat remembers your last mode selection, http/1.1 support for agent/chat, linux python env vars fixed, cursorignore fixes\n- 0.46.10: Fix for chat/apply not working with `.github` and other `.` prefixed folders, and small performance fixes.\n- 0.46.11: Release track picker (prerelease or standard), fix for dmg installer not working in rare cases\n\n0.45.x\n\n## [.cursor/rules, Better Codebase Understanding, New Tab Model](https://www.cursor.com/changelog/-cursor-rules-better-codebase-understanding-new-tab-model)\n\n- `.cursor/rules`: Users can write several repository-level rules to disk in the `.cursor/rules` directory. The Agent will automatically choose which rule to follow.\n- Deepseek models: Deepseek R1 and Deepseek v3 are supported in 0.45 and 0.44. You can enable them in Settings > Models. We self-host these models in the US.\n- Summarize Previous Composers: When conversations grow too long, you can start a new conversation while referencing the previous one.\n- Agent sees recent changes: The agent can use a tool to see your recent changes. It also sees changes made between user messages.\n- Better Codebase Understanding: We've trained a new model for Codebase Understanding. We'll be rolling it out to all users on 0.45 in the coming week.\n- Fusion Model: We've trained a new Tab Model that is substantially better at jumps and long context. We'll also be rolling this out to users shortly.\n- Optional Long Context: When tagging long files, users have the option to request a larger context window with premium models. This will use more fast requests.\n\nUPDATE (0.45.1-0.45.11): Fixes issue with older agent conversations, indexing stability, downloading incorrect extension versions, missing package on windows, crash on opening long composer sessions, latency on pasting code.\nAlso adds MCP support, team-configurable blocklists, fixes Composer stuck on generating issue for some windows builds, exit code 5 crashes, and improves MCP UI. Also several improvements to memory usage.\n\nUPDATE (0.45.12-13): Update infrastructure improvements. The F1 > \"Check for Updates\" command should now work.\n\n0.44.x\n\n## [Agent Improvements, Yolo Mode, Cursor Tab Update](https://www.cursor.com/changelog/agent-improvements-yolo-mode-cursor-tab-update)\n\n- Agent sees terminal exit codes, can run commands in the background, and commands are now editable\n- Agent reads linter errors to automatically fix issues\n- With Yolo Mode, the agent can auto-run terminal commands\n- @docs, @git, @web, and @folder are now available in the agent\n- Agent auto-saves changes to disk\n- Agent can decide to edit multiple locations in parallel\n- Agent can reapply edits with a smarter apply model\n- Composer changes and checkpoints are now persisted across reloads\n- Cursor Tab can make larger edits at a time\n- Better UX to review changes in Composer\n- 4o Support for Agent\n- Cheaper and faster Bug Finding Model\n\n### Bug Fixes\n\n- Fixed edge case where Cursor Tab crashed\n- Fixed stuck on generating bug in chat/composer\n- Composer no longer looks at files that were deleted\n- Fixed code selection edge-case for chat/apply\n- Cursor starts up faster\n\nUPDATE (0.44.1-0.44.11): Fixes and improvements to dev containers, chat codeblocks on windows, and the agent. Decreases Cursor Tab Latency on Remote SSH. Fixes bug that prematurely triggered the free trial ended popup. Better observability for errors and crashes.\n\n0.43.x\n\n## [New Composer UI, Agent, Commit Messages](https://www.cursor.com/changelog/new-composer-ui-agent-commit-messages)\n\n- Composer UI in the sidebar with inline diffs\n- Early version of an agent in composer that can pick its own context and use the terminal\n- Generation of git commit messages\n- File pill recommendations in chat/composer\n- @Recommended in chat/composer to semantically search for context\n- Nicer image-dropping experience\n- Several performance improvements\n- Beta: Sneak peek at an upcoming bug finder feature\n\n0.42.x\n\n## [Composer History, @Lint Errors, VS Code 1.93.1](https://www.cursor.com/changelog/composer-history-lint-errors-vs-code-1-93-1)\n\n- Composer history lets you access previous composer sessions after restart. You can also edit and resubmit from previous messages within a session.\n- We have made slight improvements to Debug with AI and added back @Lint Errors in Chat.\n- VS Code 1.93.1: Cursor is now based on VS Code 1.93.1.\n- Python auto import for Cursor Tab is much more stable in this release.\n- Switching models is a lot easier with model search (Cmd-option-/) in the chat, composer, and cmd-k input boxes.\n- Composer now only applies files that are in context to prevent hallucinations.\n- Using `cursor .` with WSL should now be more stable.\n\nUPDATE (0.42.1 - 0.42.5): Fixes the following upstream security issue: [CVE-2024-43601](https://github.com/microsoft/vscode/security/advisories/GHSA-g56j-w527-8x6f). Also fixes a few composer bugs and a bug with Cursor Tab. Allows composer to auto apply to files not in its context. Also includes additional mitigations to [CVE-2024-48919](https://github.com/getcursor/cursor/security/advisories/GHSA-rmj9-23rg-gr67). Reduces a few long-tail connection errors. Adds escape hatch when Claude predicts the wrong filepath in chat.\n\n0.41.x\n\n## [Cursor Tab Python Auto Import, Composer Improvements, Remote SSH to Mac Support](https://www.cursor.com/changelog/cursor-tab-python-auto-import-composer-improvements-remote-ssh-to-mac-support)\n\n_This update fixes the following security issue: [CVE-2024-45599](https://github.com/getcursor/cursor/security/advisories/GHSA-x352-xv29-r74m)._\n\n- Cursor Tab now auto-imports symbols in Python files! We've also significantly improved the Cursor Tab stability.\n- Composer Notepads (previously called Projects) can now include tagged files and be referenced in chat, as well as composer.\n- Composer can now be added to the AI pane. This release also includes many stability fixes and image support!\n- Apply and Composer are slightly faster in this release.\n- We've added support for using Cursor on Macs over Remote SSH.\n\nUPDATE (0.41.1 - 0.41.3): Improves onboarding UX, fixes a bug with composer cancellation, fixes the Apply button not working on some codeblocks, and fixes a bug where Cursor Tab sees malformed edits.\n\n0.40.x\n\n## [New Chat UX, Default-On Composer, New Cursor Tab Model](https://www.cursor.com/changelog/new-chat-ux-default-on-composer-new-cursor-tab-model)\n\n- We have a new chat UX! Excited for you to try it out and share your thoughts.\n- Composer is now default-on and available to all Pro/Business users by hitting cmd+I. We've added Composer Projects (beta), which allows you to share instructions among several composers.\n- We've also trained a new Cursor Tab model that's smarter and more context-aware.\n- Auto imports (beta) for Cursor Tab for TypeScript files - when Tab suggests an unimported symbol, we'll now auto-import it to your current file. You can enable it in Settings > Features > Cursor Tab!\n\nUPDATE (0.40.1 - 0.40.4): Fixes a bug with apply on remote ssh, a few chat bugs, speeds up Cursor Tab for Europe/Asia users, fixes some outstanding Cursor Tab bugs and notifications hiding the chat input, and includes a fix for Cursor asking for permissions for files in your `~/Library` folder on MacOS (upstream issue: [microsoft/vscode#208105](https://github.com/microsoft/vscode/issues/208105))\n\n0.39.x\n\n## [Faster Cursor Tab, More Composer improvements](https://www.cursor.com/changelog/faster-cursor-tab-more-composer-improvements)\n\n- Cursor Tab (previously called Copilot++) defaults to chunked streaming. This build also includes several Cursor Tab speedups. More to come in future builds!\n- Concurrent composers support, composer control panel, and various bug fixes such as accepted files being deleted.\n\n![](https://www.cursor.com/_next/image?url=%2Fassets%2Fimages%2Fchangelog%2Ffast-cursor-tab.gif&w=1440&q=75)\n\nFaster Cursor Tab Suggestions!\n\nUPDATE (0.39.1 - 0.39.6): Fixes several Cursor Tab rendering bugs, a bug where the file explorer was not responsive, and a bug where Cursor Tab would hang.\n\n0.38.x\n\n## [Copilot++ Chunked Streaming (beta), Composer improvements](https://www.cursor.com/changelog/copilot-chunked-streaming-beta-composer-improvements)\n\n- Copilot++ now has chunked streaming (currently in Beta)! It will surface edits faster in smaller chunks. To enable it, click the settings gear and enable \"Chunked Streaming\" under Features > Copilot++.\n- We've also added a file picker, arrow key navigation, and a model toggle to Composer. This release also patches a few outstanding Composer bugs.\n- VS Code 1.91.1: Cursor is now based on VS Code 1.91.1.\n- New Default Model: We've made Claude 3.5 Sonnet the default model for users.\n\nUPDATE (0.38.1): Fixes a bug where OpenAI API Key users would be migrated to Claude 3.5 Sonnet\n\n0.37.x\n\n## [Composer (beta)](https://www.cursor.com/changelog/composer-beta-)\n\nThis build comes with a new experimental multi-file editing feature. To enable it, click the settings gear, head to Beta, and activate \"Composer.\" To use it, hit Cmd+I. We'd love [to hear your thoughts](https://forum.cursor.sh/).\n\n0.36.x\n\n## [Instant Applies, Docs Management](https://www.cursor.com/changelog/instant-applies-docs-management)\n\n- When the chat suggests a code block, click \"Apply\" to instantly see the change to the file (small enough files only).\n- Docs management! Go to Cursor Settings > Features > Docs to re-index your docs.\n- Bug fixes when using your own API key for Claude.\n\nUPDATE (0.36.1-0.36.2): Fixes [#1526, cmd-shift-F on macOS x64 devices](https://github.com/getcursor/cursor/issues/1526). Also fixes official docs taking a long time to show up, and [cmd-K stickiness being buggy](https://forum.cursor.com/t/cntrl-k-broken-in-update-7-6-2024-version-0-36-1-vscode-version-1-89-1/6251/6).\n\n0.35.x\n\n## [Default-on Cursor Prediction, Remote Tunnels & More Robust SSH](https://www.cursor.com/changelog/default-on-cursor-prediction-remote-tunnels-more-robust-ssh)\n\n- Default-on Cursor Prediction with a new UI\n- Remote tunnels are now supported! Remote SSH support is also more robust (now supports multiple proxy jumps, among other things).\n- Adds context pills to chat messages, so you can see what will be/was used\n- Cmd K context-building improvements\n- Fixes partial completions with Copilot++ on Windows/Linux\n\nUPDATE (0.35.1): Disables Copilot++ partial accepts by default and makes the keybinding configurable (go to Cursor Settings > Features > Cpp to re-enable). Makes gpt-4o the default model.\n\n0.34.x\n\n## [VS Code 1.89, New Cursor Prediction UI, Gemini 1.5 Flash, Copilot++ partial completion](https://www.cursor.com/changelog/vs-code-1-89-new-cursor-prediction-ui-gemini-1-5-flash-copilot-partial-completion)\n\n- Merges VS Code 1.89 into Cursor\n- New Cursor Prediction UI\n- Gemini 1.5 Flash is available in long-context mode\n- Accept partial completions with Copilot++\n- Better performance of Copilot++ on linter errors\n- Toggleable rerankers on codebase search\n- GPT-4o in Interpreter Mode\n\nUPDATE (0.34.1-0.34.6): Fixes long context models in the model toggle, an empty AI Review tab, Copilot++ preview bugs, the Mac icon size, and remote ssh fixes.\n\n0.33.x\n\n## [Networking Stability, Command-K Autoselect](https://www.cursor.com/changelog/networking-stability-command-k-autoselect)\n\n- Stability: This build fixes a connection error problem that was consistently affecting some users. It should also improve the performance of Cursor on spotty internet.\n- Command-K Autoselect: We've also added automatic selection for Command-K! This means you can now press Command-K, and it will automatically select the region you're working on, though you can still select manually if you prefer.\n\nUPDATE (0.33.1-0.33.3): Fix to settings toggles, fix to Copilot++ diffbox performance, onboarding tweaks.\n\n0.32.x\n\n## [Improved Copilot++ UX, New GPT-4 Model](https://www.cursor.com/changelog/improved-copilot-ux-new-gpt-4-model)\n\n- Copilot++ UX: Suggestion previews now have syntax highlighting, which we find makes it much easier to quickly understand the changes.\n- Cursor Help Pane (Beta): You can also ask Cursor about Cursor! The Cursor Help Pane has information about features, keyboard shortcuts, and much more. You can enable it in Settings > Beta.\n- New GPT-4 model: As of a couple of days ago, you can try out `gpt-4-turbo-2024-04-09` in Cursor by toggling it on in Settings > Models.\n- `.cursorrules`: You can write down repo-level rules for the AI by creating a `.cursorrules` file in the root of your repository. You might use this to give for context on what you're building, style guidelines, or info on commonly-used methods.\n\nUPDATE (0.32.1-0.32.7): Fixes a performance issue with the new Copilot++ syntax highlighting, changes AI Notes to be default disabled, changes the naming of the `main` Copilot++ model to `legacy`, fixes Copilot++ being slower over SSH, fixes to the Copilot++ preview box.\n\n0.31.x\n\n## [Long Context Chat Beta](https://www.cursor.com/changelog/long-context-chat-beta)\n\n- Long Context Chat (Beta): This is a new experimental feature that lets you talk with _lots_ of files! To enable it, head to Settings > Beta. Then, select \"Long Context Chat\" in the top right of a new chat and try @'ing a folder or the entire codebase.\n- Fixes: This release patches a bug where empty / partial responses are shown in chat.\n\nUPDATE (0.31.1 - 0.31.3): Adds back in AI Review (alpha), fixes the \"Cursor Settings\" menu item, and fixes a bug where @web doesn't return a response.\n\n0.30.x\n\n## [Faster Copilot++, Claude](https://www.cursor.com/changelog/faster-copilot-claude)\n\n- Faster Copilot++: We've made Copilot++ ~2x faster! This speed bump comes from a new model / faster inference. ~50% of users are already on this model, and it will roll out to everyone over a few days. If you'd like to enable the model immediately, you can control your model in the bottom bar of the editor.\n- Stable Claude Support: All the newest Claude models are available for Pro and API key users. Head to Settings > Models to toggle them on. Pro users get 10 requests / day for free and can keep using Claude at API-key prices for subsequent requests.\n- Team invites: We made it a bit easier for you to invite your colleagues to your Cursor team. You can send these from the editor's settings or at [cursor.com/settings](https://cursor.com/settings).\n- Admin improvements: Team admins can now mark themselves as unpaid users and can see the last time team members used the product.\n- New Settings: We moved all our settings to be accessible by the gear in the top right. No more \"More\" tab!\n\nMar 12, 2024\n\n## [Claude Support](https://www.cursor.com/changelog/claude-support)\n\nIf you're a Pro or Business user, you can add \"claude-3-opus\" as a custom model in the Settings page and use 10 fast requests per day for free (unlimited slow, but the delay increases exponentially).\n\nWe expect to roll out a more permanent solution (including API key users) very soon.\n\n0.29.x\n\n## [Polish](https://www.cursor.com/changelog/polish)\n\nAI Notes enabled by default (hold shift on any symbol), better in-editor chat, auto-execute interpreter mode, better onboarding styling, nicer feedback modal, and a few stability fixes.\n\nUPDATE (0.29.1): Fixes a bug where the Copilot++ sometimes would not show a suggestion even if one existed, a bug where the hint line would sometimes cover the ghost text, and a bug where AI Notes would not work on Windows.\n\n0.28.x\n\n## [VS Code 1.86.2](https://www.cursor.com/changelog/vs-code-1-86-2)\n\nCursor is now based on VS Code 1.86.2! Among other things, this adds sticky scroll support to tree views. Also, cmdk prompt bars are now sticky.\n\nUPDATE (0.28.1): Fixes spacing issue with codebase chat, fixes [getcursor/cursor#1236](https://github.com/getcursor/cursor/issues/1236).\n\n0.27.x\n\n## [Linter, Interpreter Mode Updates](https://www.cursor.com/changelog/linter-interpreter-mode-updates)\n\nTwo new updates to experimental features:\n\n- Linter: You can now turn on an AI linter in the \"More\" tab beside Chat. It'll scan your file for small bugs every time you save.\n- Interpreter Mode: We've made some big improvements to the backend powering interpreter mode! It should now be much better at using tools and understanding your project.\n\nUPDATE (0.27.1-0.27.4): Fixes to Windows build, chat context UI, onboarding.\n\n0.26\n\n## [AI Previews Beta](https://www.cursor.com/changelog/ai-previews-beta)\n\nAI Previews: this is an experimental new code reading feature. After enabling in the \"More\" tab beside Chat, just hold shift to see a generate some quick notes about the symbol you're on. If you'd like us to dedicate more time to this direction, please [let us know](https://forum.cursor.com/).\n\nOther changes:\n\n- Fine-grained chat replies (start by hovering over the area of the response you want to reply to)\n- Copilot++ quality of life improvements (show ghost text more often, toggle on/off on the status bar, make it easier to see the suggestion box)\n- Smoother onboarding (fix Windows settings import, option to import folder/window state)\n\n0.25.0-nightly\n\n## [Cmd-I to Heal](https://www.cursor.com/changelog/cmd-i-to-heal)\n\nHold down cmd-I over a selection to heal the code with GPT-4. Useful for writing pseudocode and having the AI convert it into correct code. Please let us know if you find it useful!\n\n0.25.x\n\n## [Command-K Vision Support](https://www.cursor.com/changelog/command-k-vision-support)\n\nYou can now drag images into the Command-K prompt bar!\n\nOther changes:\n\n- You can now search through past chats.\n- \"Apply Diffs\" from chat should be a bit faster.\n\nUPDATES:\n\n- 0.25.2: Copilot++ performance improvements\n- 0.25.3: Fix for a cmd-K bug: [getcursor/cursor#1226](https://github.com/getcursor/cursor/issues/1226).\n\n0.24.x\n\n## [@Web, gpt-4-0125-preview](https://www.cursor.com/changelog/-web-gpt-4-0125-preview)\n\nUsing @Web in chat will give the AI the ability to crawl the web! The tools it can use include a search engine and a documentation site crawler.\n\nThis feature is still experimental. We're very interested in improving the ability of the AI to understand external libraries, and your [thoughts](https://forum.cursor.com/) will help us improve :).\n\nBoth pro and API key users can also try out gpt-4-0125-preview by configuring the model under Settings > OpenAI API > Configure Models. We're testing the new model right now for pro users to see if it performs better than all older versions of gpt-4. If so, will roll out as the default experience.\n\nUPDATE (0.24.3-0.24.4): Adds ability to configure OpenAI base URL, fixes [getcursor/cursor#1202](https://github.com/getcursor/cursor/issues/1202).\n\n0.23.x\n\n## [New Model, Apply Button v2](https://www.cursor.com/changelog/new-model-apply-button-v2)\n\n- \"cursor-fast\": This is a new model available in command-k and chat. Expect it to be a bit smarter than gpt-3.5, and with many fewer formatting errors.\n- Apply button: We've added some polish to the \"apply codeblock\" experience in chat.\n- Chat lints: If the AI suggests a code change in chat that involves a made up code symbol, we'll underline it. Availble for Python, Typescript, Rust.\n- More chat symbol links: When the chat references a `code symbol`, you'll often be able to click directly to it.\n\nUPDATE (0.23.3-0.23.9): Fixes to Command-K, changelog auto-opening, editing very long lines with Copilot++, the \"delete index\" button, connection errors being silenced, and proxied authentication.\n\n0.22.1-nightly\n\n## [Cursor-Fast Model](https://www.cursor.com/changelog/cursor-fast-model)\n\nCursor-Fast is a newly trained model between gpt-3.5 and gpt-4 coding capabilities, with very fast response times (~3.5 speed).\nWe'll be working to improve its performance over the coming weeks. Counts the same as 3.5 usage.\n\nTry using it for Cmd+k!\n\nBug fixes:\n\n- Working WSL codebase search\n- Supports newer version of python extension\n\n0.22.0\n\n## [Dev Containers](https://www.cursor.com/changelog/dev-containers)\n\nDev containers are now supported! This build also:\n\n- Upgrades Cursor to VS Code 1.85, which comes with support for dragging out tabs into a new window.\n- Improves the stability of WSL.\n\n0.21.6-nightly\n\n## [Better Remote Support](https://www.cursor.com/changelog/better-remote-support)\n\nWSL and Dev Containers should now work properly.\n\n0.21.5-nightly\n\n## [Early Preview: Hold-cmd-tap-shift to Trigger AI Rewrite](https://www.cursor.com/changelog/early-preview-hold-cmd-tap-shift-to-trigger-ai-rewrite)\n\nHold down command, press and release shift, and continue holding down command. This will trigger tha AI to rewrite code around your Cursor \u2014 you can think of it as a manually triggered GPT-4-powered Copilot++. You can use it to write pseudocode and have the AI correct it, or for tedious refactors where Copilot++ doesn't quite suffice.\n\n0.21.4-nightly\n\n## [Aux Window Fixes](https://www.cursor.com/changelog/aux-window-fixes)\n\nYou can now use chat and cmd-k in the aux window without too many problems.\n\n0.21.3-nightly\n\n## [VS Code 1.85.1](https://www.cursor.com/changelog/vs-code-1-85-1)\n\nCursor is now based on VS Code 1.85.1, which, among other things, includes floating editor windows. Just drag and drop an editor onto your desktop to try it out.\n\n0.21.0\n\n## [Multiple Command-K, Copilot++ UI](https://www.cursor.com/changelog/multiple-command-k-copilot-ui)\n\nYou can now run multiple Command-K's in parallel! Also, it should now be easier to see change Copilot++ is suggesting.\n\n0.20.0\n\n## [Copilot++, @ previews, AI Review](https://www.cursor.com/changelog/copilot-previews-ai-review)\n\n- @ previews: We made it easier to see what codeblock you're @'ing.\n- Copilot++: We've contined to improve the Copilot++ ghost text experience. Surprisingly, many of us now enjoy using Copilot++ without any other autocomplete plugin installed.\n- AI Review (beta): This is a new experimental feature that let's GPT-4 scan your git diff or PR for bugs. You can enable it in the \"More\" tab beside chat. [Feedback](https://forum.cursor.com/) is much appreciated.\n\nUPDATE (0.20.1-0.20.2): We added TLDRs to make it easier to sort through the bugs flagged by the AI review and fixed a bug with \"Diff with Main.\"\n\n0.19.1\n\n## [Interpreter Mode Windows Bug](https://www.cursor.com/changelog/interpreter-mode-windows-bug)\n\nFixes a CRLF bug in interpreter mode: [getcursor/cursor#1131](https://github.com/getcursor/cursor/issues/1131).\n\n0.19.0\n\n## [Copilot++ Improvements](https://www.cursor.com/changelog/copilot-improvements)\n\nWe made Copilot++ faster, smarter, more constrained, and switched to a ghost-text + hit-Tab-to-accept UI. Would love your feedback.\n\n0.18.11-nightly\n\n## [Make SSH Work on Xon.sh](https://www.cursor.com/changelog/make-ssh-work-on-xon-sh)\n\nMake ssh work on xon.sh\n\n0.18.10-nightly\n\n## [Minor Bug Fixes](https://www.cursor.com/changelog/minor-bug-fixes)\n\nMino bug fixes.\n\n0.18.9-nightly\n\n## [Fix Onboarding for Option Edits](https://www.cursor.com/changelog/fix-onboarding-for-option-edits)\n\nMinor onboarding fixes.\n\n0.18.4\n\n## [0.18.5 - Onboarding & Feedback](https://www.cursor.com/changelog/0-18-5-onboarding-feedback)\n\nMinor onboarding changes.\nAllows users to provide feedback on the chat response.\n\n0.18.3-nightly\n\n## [Smarter Followups](https://www.cursor.com/changelog/smarter-followups)\n\nRunning Cmd+enter on followups should result in much better codebase results.\n\n0.18.2\n\n## [Lowercase @ Folders Fix](https://www.cursor.com/changelog/lowercase-folders-fix)\n\nFixes the bug where all folders are switched to lowercase when using @ folder in chat.\n\n0.18.0\n\n## [Better Context Chat, Faster Copilot++](https://www.cursor.com/changelog/better-context-chat-faster-copilot-)\n\n1. Better context chat: in particular, followups are now smarter!\n2. Faster Copilot++: a few hundred milliseconds faster, through various networking optimizations. We still have several hundred additional milliseconds to cut here.\n3. More reliable Copilot++ changes: less flashing, better highlighting of what's new.\n\n0.17.0\n\n## [Image Support, Interpreter Mode Beta, @ Folders](https://www.cursor.com/changelog/image-support-interpreter-mode-beta-folders)\n\n- Image Support in Chat: You can now drag and drop images into the chat to send them to the AI.\n- Interpeter Mode Beta: You can now enable Interpreter Mode in the \"More\" tab. This gives the chat access to a Python notebook, semantic search, and more tools.\n- @ folders: You can now use the @ symbol to reference specific folders! We'll try to pick out the most relevant code snippets to show the AI.\n- Copilot++ Improvements: We've spent some time improving the latency of Copilot++, and you can change the Copilot++ keybinding to not be Option/Alt. More to come here soon, especially on the model itself!\n\n0.16.6-nightly\n\n## [0.16.9-nightly - Interpreter Mode Windows Bug Fixes](https://www.cursor.com/changelog/0-16-9-nightly-interpreter-mode-windows-bug-fixes)\n\nFixes a bug where the interpreter mode just wouldn't run at all on Windows.\n\n0.16.5-nightly\n\n## [GPT-V Windows Bug-fixes](https://www.cursor.com/changelog/gpt-v-windows-bug-fixes)\n\nFixes the bug where images weren't showing up or being sent to server on Windows.\n\n0.16.4-nightly\n\n## [@folder](https://www.cursor.com/changelog/-folder)\n\nYou can now @folder in the chat to chat with a folder. Let us know what you think!\n\n0.16.3-nightly\n\n## [Interpreter Mode Beta](https://www.cursor.com/changelog/interpreter-mode-beta)\n\nExperimental feature: go to \"More\" > \"Interpreter Mode\" to enable it. Gives the model access to a Python notebook where it can take actions in the editor. Please give us feedback in the Discord! We'd love to know if you find it useful.\n\n0.16.2-nightly\n\n## [GPT-V Support](https://www.cursor.com/changelog/gpt-v-support)\n\nIntegrates GPT-V into chat for the editor. This means you can take screenshots/images and drag it into the chat inputbox to have Cursor use them as context.\nThis is an experimental feature and very limited by capacity, so you may see errors during traffic spikes.\n\n0.16.0\n\n## [Copilot++ improvements and VS Code 1.84.2](https://www.cursor.com/changelog/copilot-improvements-and-vs-code-1-84-2)\n\nCopilot++ improvements:\n\n1. Caching \u2014 add and delete a letter and the suggestion will still be there for you!\n2. Do not interfere with intellisense and cmd-k.\n3. Fixes bugs with lag on large files and with the blue highlight staying around.\n4. Copilot++ sees your lint errors and will use this to improve its suggestions\n\nCursor is now based on VS Code 1.84.2. Notably, this fixes a few notebook bugs, and ensures that all of the most recent extensions work.\n\n0.15.6-nightly\n\n## [New upstream](https://www.cursor.com/changelog/new-upstream)\n\nNow based on VS Code 1.84.2. Notably, this fixes a few notebook bugs, and ensures that all of the most recent extensions work.\n\n0.15.2\n\n## [0.15.5 - Copilot++ improvements, Bug fixes](https://www.cursor.com/changelog/0-15-5-copilot-improvements-bug-fixes)\n\n- Copilot++ improvements: Includes green highlights to see what Copilot++ has added, the ability to accept multiple Copilot++ suggestions immediately one after another, support for Copilot++ on SSH, and fixes to how Copilot++ UI interacts with autocomplete plugins.\n- Bug fixes: Fixed a bug where Cmd-k could get into a bad state when removing at the top of a file. And another that was causing some files to not be indexed.\n\n0.15.0\n\n## [0.15.1 - New models, Copilot++ beta](https://www.cursor.com/changelog/0-15-1-new-models-copilot-beta)\n\n- Command-dot: you can now use the Command-dot menu to have Command-K fix lint errors inline.\n- New models: you can plug in your API key to try out the newest gpt-4 and gpt-3 turbo models. We're evaluating the coding skills of these models before rolling out to pro users.\n- Apply chat suggestions: click on the play button on any code block to have the AI apply in-chat suggestions to your current file.\n- Copilot++ (beta): this is an \"add-on\" to Copilot that suggests diffs around your cursor, using your recent edits as context. To enable it, go to the \"More\" tab in the right chat bar. Note: to cover the costs of the AI, this is only available for pro users.\n\n- This is very experimental, so don't expect too much yet! [Your feedback](https://forum.cursor.com/) will decide which direction we take this.\n\n0.14.1\n\n## [Indexing fixes](https://www.cursor.com/changelog/indexing-fixes)\n\nFixes a problem where indexing got stuck. Indexing capacity is now also allocated by-user, so it should be more fair and faster for most users.\n\n0.14.0\n\n## [Pro++, Word-wrapping diffs, and more](https://www.cursor.com/changelog/pro-word-wrapping-diffs-and-more)\n\n- Pro++ plan: if you hit your fast request limit and prefer to purchase more, you now can.\n- Chat scroll: we got rid of sticky scroll to make the chat easier to read.\n- Cmd-K diffs: these now obey word-wrap! You can also copy from the red text.\n- Fixed the bug where you can't use chat on a diff view.\n- Shipped better error logging, which should help us improve stability.\n- Styling tweaks: some buttons and hints should look nicer!\n- Screen flickering: made a change that should reduce screen flickering on monitors.\n\n0.13.0\n\n## [0.13.4 - New VS Code version](https://www.cursor.com/changelog/0-13-4-new-vs-code-version)\n\nCursor is now based on VS Code 1.83.1. This ensures that the newest versions of all extensions will work without problem in Cursor. Thank you to everyone who urged us to do this on the [forum](https://forum.cursor.com/t/vscode-version-1-83-cursor/954/21)!\n\nAlso, there's an experimental bash mode: enable it in the settings, and let the chat answer questions with the help of running bash commands. If you find it useful, please let us know, and we will spend more time on making it production-ready!\n\nUpdate: this change resulted in a problem with SSHing into old Linux distros. This has now been fixed!\n\n0.12.1\n\n## [0.12.3 - Small fixes](https://www.cursor.com/changelog/0-12-3-small-fixes)\n\nBug fixes: (1) .cursorignore now completely respects .gitignore syntax, (2) codebase queries use the embeddings index if >= 80% of it is indexed, instead of requiring the entire thing to be indexed, (3) removed fade-in animation on startup, (4) no longer overrides cmd-delete in the terminal, (5) fixes problem where cmd-F randomly has the case-sensitive option enabled, (6) inline gpt-4 is turned off until we figure out a better UX, (7) even more stable and fast indexing, (8) progress indicator in search and extensions, (9) bug where an incorrect bearer token is passed to the server.\n\n0.12.9-nightly\n\n## [Jupyter Import Fix](https://www.cursor.com/changelog/jupyter-import-fix)\n\nFixes a bug that prevents importing the jupyter extension from VS Code.\n\n0.12.0\n\n## [Indexing, cmd-k in terminal, @git, /edit, bugfixes](https://www.cursor.com/changelog/indexing-cmd-k-in-terminal-git-edit-bugfixes)\n\n1. Indexing should now be faster, more stable, and use less of your system resources. You can also configure ignored files in a `.cursorignore`. The controls are in the \"More\" tab.\n2. Cmd-k is now in the terminal! A bit hackily implemented, but surprisingly useful.\n3. Ask about git commits and PRs using @git in chat!\n4. Use /edit in the chat to edit a whole file (if less than 400 lines). Expect the edits to be fast and GPT-4-quality. This uses non-public models, and is for now only available to users who do not use their own API key.\n5. Bugfixes! Fixed the \"ejected from slow mode\" UI, added auto-switching logic for the model type when switching on API, improved @ symbol speed, fixed Windows keycommand to be Ctrl-Shift-Y instead of Ctrl-Y, and more.\n\n0.11.15-nightly\n\n## [/edit in chat](https://www.cursor.com/changelog/-edit-in-chat)\n\nYou can now use an early preview of `/edit` in the chat! It's significantly faster at editing entire files than just using cmd-k. The `/edit` feature is currently only supported if you do not use your own API key, since it relies on non-public models.\n\n0.11.13-nightly\n\n## [gitignore and search hotfix](https://www.cursor.com/changelog/gitignore-and-search-hotfix)\n\n1. Fixes an annoying gitignore path bug\n2. never lets your root directory be in the gitignore\n3. fixes search over the repository.\n\n0.11.5-nightly\n\n## [Stable Indexing v0.1](https://www.cursor.com/changelog/stable-indexing-v0-1)\n\nStable version of indexing. this should be much more stable than previous versions.\n\n0.11.3-nightly\n\n## [Cmd-K in the terminal!](https://www.cursor.com/changelog/cmd-k-in-the-terminal-)\n\nHacky first version of cmd-K in the terminal! Let us know what you think.\n\n0.11.2-nightly\n\n## [More Stable Codebase Indexing](https://www.cursor.com/changelog/more-stable-codebase-indexing)\n\nWe ship a new version of indexing which should be significantly more stable than previous versions\n\n0.11.1\n\n## [0.11.8 - Patches](https://www.cursor.com/changelog/0-11-8-patches)\n\nFixes issues with Cmd-k, SSH, Python support, Vim (rolling back to 1.25.2 until this issue is fixed: [VSCodeVim/Vim#8603](https://github.com/VSCodeVim/Vim/issues/8603)), and other extensions.\n\n0.11.0\n\n## [Inline Chat](https://www.cursor.com/changelog/inline-chat)\n\nYou can now alternate between diffs and texts responses in Cmd-K. This can be helpful for clarifying the models thinking behind a diff or for getting quick inline answers to questions about a file.\n\n0.11.1-nightly\n\n## [Cursor Python and Cursor Marketplace](https://www.cursor.com/changelog/cursor-python-and-cursor-marketplace)\n\nWe point to a different marketplace for downloading extensions, and use a fork of ms-python and pyright to provide python support.\n\n0.10.7-nightly\n\n## [Re-enable Cursor Python](https://www.cursor.com/changelog/re-enable-cursor-python)\n\nWe re-enable cursor python in nightly, this time with defaults that more closely resemble pylance.\n\n0.10.6-nightly\n\n## [Cursor Marketplace](https://www.cursor.com/changelog/cursor-marketplace)\n\nWe serve extensions now using Cursor's Extension Marketplace\n\n0.10.5-nightly\n\n## [Fix bug in @ symbol ranking](https://www.cursor.com/changelog/fix-bug-in-symbol-ranking)\n\nFixes a bug where the @ symbol would rank suboptimally.\n\n0.10.4-nightly\n\n## [Quick question and @chat in cmd+k](https://www.cursor.com/changelog/quick-question-and-chat-in-cmd-k)\n\nAsk a question about an edit that the model with option+enter, or bring in context from the chat with @chat! An early preview, so please let us know what you think.\n\n0.10.4\n\n## [Fixed builtin cursor-python defaults](https://www.cursor.com/changelog/fixed-builtin-cursor-python-defaults)\n\nThe defaults for cursor python are different than pylance, which has affected several users. We make them\ncloser to the pylance defaults in this update.\n\n0.10.2\n\n## [0.10.3 - Reduce extension recommendations](https://www.cursor.com/changelog/0-10-3-reduce-extension-recommendations)\n\nFixes an issue where some users were getting extension popup recommendations too often.\n\n0.10.1-nightly\n\n## [Styling tweaks](https://www.cursor.com/changelog/styling-tweaks)\n\nUpdated some css!\n\n0.10.0\n\n## [Better Docs Management, Staged Rollouts](https://www.cursor.com/changelog/better-docs-management-staged-rollouts)\n\n### Docs\n\nThe main addition in this update is better docs support. This means you can add and remove docs and inspect the urls\nthat are actually being used for each doc you have uploaded. You'll also be able to see what webpages end up being shown to GPT-4 to provide you an answer.\n\nYou can also paste a url into the chat and the model will automatically include it in the context being used.\nTeams can also share private docs.\n\n### Staged Rollouts\n\nFollowing this update, future updates should come as staged rollouts. This will mean greater guarantees of stability and more frequent updates.\n\n### Long files in chat\n\nWe continued to improve the experience of chatting with large files. If you @ multiple files that are too large to fit in GPT-4's context window, we'll intelligently pick the most relevant chunks of code to show to show the model.\n\n### Bug fixes:\n\n- Copy Paste chat text form Jupyter\n- Some chat focus issues\n- UI tweaks\n- Better state management - prevents crashes from editor using too much memory\n\n0.10.1\n\n## [Styling](https://www.cursor.com/changelog/styling)\n\nUpdated some css!\n\n0.9.9-nightly\n\n## [@definitions in cmd+k](https://www.cursor.com/changelog/-definitions-in-cmd-k)\n\nAlso fixes a few cmd+k bugs, as well as introduces new cmd+k bugs! Please report all cmd+k bugs you find to us in the Discord channel.\n\n0.9.8-nightly\n\n## [New AI Project](https://www.cursor.com/changelog/new-ai-project)\n\nWe release an improved New AI Project feature to nightly users. This is a more robust chain and cleaner\nUX for producing a project end-to-end.\n\nIt still struggles with coherently producing large complex projects, but produces much better first drafts than previously\n\n0.9.5\n\n## [Hotfix for indexing](https://www.cursor.com/changelog/hotfix-for-indexing)\n\nFixes a bug with indexing if you had turned off indexing by default.\n\n0.9.7-nightly\n\n## [Better State Management](https://www.cursor.com/changelog/better-state-management)\n\nWe no longer store any full files in memory and prevent users from @'ing very large files (> 2MB)\nThis should reduce any significant memory issues that users have been experiencing.\n\n0.9.4\n\n## [Hotfix Cmd-K unexpectedly outputting backticks](https://www.cursor.com/changelog/hotfix-cmd-k-unexpectedly-outputting-backticks)\n\nCmd-K will no longer output backticks if you do `@file`.\n\n0.9.6-nightly\n\n## [Docs updates](https://www.cursor.com/changelog/docs-updates)\n\nUpdates to docs (try pasting a link in chat, you can delete/edit docs, you can see citations), @ symbol performance on long files in chat should improve, and more.\n\n0.9.5-nightly\n\n## [Cursor-Python LSP](https://www.cursor.com/changelog/cursor-python-lsp)\n\nShips with cursor-python, a Language-Server fork of pyright built for Cursor\n\n0.9.4-nightly\n\n## [Staged Rollouts](https://www.cursor.com/changelog/staged-rollouts)\n\nWe can push an update to a randomly sampled small fraction of our users before rolling out to everyone.\n\n0.9.3\n\n## [Hotfix Github Auth](https://www.cursor.com/changelog/hotfix-github-auth)\n\nYou should now be able to sign in with GitHub again.\n\n0.9.2-nightly\n\n## [Hotfix for large persisted state](https://www.cursor.com/changelog/hotfix-for-large-persisted-state)\n\nCould cause [getcursor/cursor#843](https://github.com/getcursor/cursor/issues/843).\n\n0.9.2\n\n## [Hotfix large persisted state](https://www.cursor.com/changelog/hotfix-large-persisted-state)\n\nCould cause [getcursor/cursor#843](https://github.com/getcursor/cursor/issues/843).\n\n0.9.1\n\n## [Hotfix SSH](https://www.cursor.com/changelog/hotfix-ssh)\n\nHotfixes a problem with SSH.\n\n0.9.0\n\n## [Auditable codebase context, VS Code left bar](https://www.cursor.com/changelog/auditable-codebase-context-vs-code-left-bar)\n\n- [You can now switch to the VS Code sidebar orientation](https://forum.cursor.com/t/getting-used-to-the-orientation-of-the-primary-sidebar/20/4?u=truell20)\n- For \"with codebase\" chats, you can now see the codebase context that Cursor shows GPT-4. We hope this will make it easier to prompt codebase answers.\n- API Key input box is now a password type\n- Fixed a bug where code was being indexed right after turning off the indexing option\n- A new icon! Thank you so much to [the amazing Atanas Mahony](https://twitter.com/amahony/status/1694662454041604510) who made it.\n\n0.8.4-nightly\n\n## [Small refactor](https://www.cursor.com/changelog/small-refactor)\n\nSmall refactor that we want to make sure doesn't break! Please report bugs if you find them.\n\n0.8.6\n\n## [Email in settings](https://www.cursor.com/changelog/email-in-settings)\n\nThe email under the logout button in Cursor settings was not updating.\n\n0.8.5\n\n## [Advanced Button](https://www.cursor.com/changelog/advanced-button)\n\nHave the advanced context button show up for non git repos.\n\n0.8.3-nightly\n\n## [Bug fix for people on language packs](https://www.cursor.com/changelog/bug-fix-for-people-on-language-packs)\n\nWe had a big bug for people on language packs. Thank you to all who helped us debug! This should now be fixed, and should not happen again.\n\n0.8.4\n\n## [WSL Fixes](https://www.cursor.com/changelog/wsl-fixes)\n\nApplies the patch [from Github](https://github.com/getcursor/cursor/issues/660#issuecomment-1692569259) across all your WSL (Windows Subsystem for Linux) distros, either automatically or through the \"Fix WSL\" command palette command.\n\n0.8.3\n\n## [Codebase indexing controls](https://www.cursor.com/changelog/codebase-indexing-controls)\n\nFixes a bug were codebase indexing controls where inadvertently removed.\n\n0.8.2\n\n## [Cmd-k Followups, chat with large files, and more](https://www.cursor.com/changelog/cmd-k-followups-chat-with-large-files-and-more)\n\n- You can now reply to Cmd-K outputs, making it much easier to have the model revise its work.\n- If you @ reference a long file that will be cutoff by the context limit, you'll be given the option to automatically chunk the file and scan it with many GPTs.\n- Codeblocks and code symbols in \"with codebase\" responses will now often be clickable.\n- Follow-up chat messages to \"with codebase\" will keep the codebase context.\n- Nicer error messages in the chat! Fewer annoying popups.\n- Activity bar elements can now be reordered with drag-and-drop.\n- SSH support is now more robust! Please continue to let us know if you are experiencing any SSH problems.\n\n0.8.1-nightly\n\n## [Activity bar can now be vertical](https://www.cursor.com/changelog/activity-bar-can-now-be-vertical)\n\nSet `workbench.activityBar.orientation` to `vertical`, and restart Cursor, to see the vertical activity bar that you're used to from VS Code.\n\n0.7.18-nightly\n\n## [Small fixes](https://www.cursor.com/changelog/small-fixes)\n\n1. Nicer error messages in the chat! Fewer annoying popups.\n2. Activity bar elements can now be reordered with drag-and-drop.\n\n0.7.16-nightly\n\n## [More robust SSH support](https://www.cursor.com/changelog/more-robust-ssh-support)\n\nSSH support is now more robust! Please continue to let us know if you are experiencing any SSH problems.\n\n0.7.14-nightly\n\n## [Small improvements](https://www.cursor.com/changelog/small-improvements)\n\nSmall things!\n\nThe `cursor-nightly` command now works on Mac.\n\nKeychords now use Cmd+R/Ctrl+R.\n\n0.7.3\n\n## [Patch cursor command on Windows](https://www.cursor.com/changelog/patch-cursor-command-on-windows)\n\nFixes a bug with installing the `cursor` command on Windows.\n\n0.7.9-nightly\n\n## [0.7.10-nightly - Long-file experience](https://www.cursor.com/changelog/0-7-10-nightly-long-file-experience)\n\nBetter experience for long files!\n\n0.7.8-nightly\n\n## [Followups in edits](https://www.cursor.com/changelog/followups-in-edits)\n\nThe cmd-k edits now support followups! This is an early preview \u2014 please let us know of any annoyances or bugs, or if you preferred the no-followup mode. Please please send all feedback you have in the Discord channel!\n\n0.7.2\n\n## [& 0.7.6-nightly - Fix cmd-k generate with large file](https://www.cursor.com/changelog/-0-7-6-nightly-fix-cmd-k-generate-with-large-file)\n\nNo more cognitive computing!\n\n0.7.1\n\n## [& 0.7.5-nightly - Fix: Cursor in the wrong place](https://www.cursor.com/changelog/-0-7-5-nightly-fix-cursor-in-the-wrong-place)\n\n1. Fix [getcursor/cursor#711](https://github.com/getcursor/cursor/issues/711).\n2. Fix cmd-k connection error.\n3. Fix cmd-k fast mode bug with empty lines.\n4. Fix bm25 search infinite loading.\n5. Fix @Codebase in followups.\n\n0.7.0\n\n## [In-editor chat](https://www.cursor.com/changelog/in-editor-chat)\n\nFor those who don't want the chat side-by-side, you can now pop it into your editor! We've also fixed a number of bugs.\n\n0.7.1-nightly\n\n## [Cmd-K fast mode](https://www.cursor.com/changelog/cmd-k-fast-mode)\n\nCmd-K now has a fast mode! It is about 1 second faster, and we're working on making it even faster. Let us know what you think!\n\n0.6.5-nightly\n\n## [0.6.6-nightly - New cmd-K keybindings](https://www.cursor.com/changelog/0-6-6-nightly-new-cmd-k-keybindings)\n\nAnd a few other quality-of-life updates.\n\n0.6.3-nightly\n\n## [0.6.4-nightly - In-editor chat is back!](https://www.cursor.com/changelog/0-6-4-nightly-in-editor-chat-is-back-)\n\nAlso, the linter is slightly improved.\n\n0.6.1-nightly\n\n## [0.6.2-nightly - Improved linter](https://www.cursor.com/changelog/0-6-2-nightly-improved-linter)\n\nImproved linter! Please give us feedback on the linter suggestions using the smiley faces. If you would like, you can make it more aggressive by going to the More tab and then clicking on \"Advanced linter settings\" at the bottom. Let us know what you think in the Discord.\n\n0.6.0\n\n## [A copilot experience powered by gpt-4](https://www.cursor.com/changelog/a-copilot-experience-powered-by-gpt-4)\n\n### Long AI completions\n\nIf you press \u2318/^+\u21a9\ufe0f on any line, you will now get gpt-4 powering fast-completions for you!\nWe know that sometimes all of us want copilot to write an entire function or a big chunk of code.\nBut copilot can be slow and sometimes just not smart enough :(. So we're trying to solve this with a\nnew completion experience powered by gpt-4. Just press \u2318/^+\u21a9\ufe0f and you'll get a long completion from gpt-4.\n\n### Better support for remote-ssh\n\nRemote-ssh is now built-in to cursor. You do not need to edit the behavior, it should just work :)\nWe know this has been a big blocker for many users that rely on remote machines for development.\nIf you are still running into issues, please let us know and we will fix it ASAP.\n\n### AI linter\n\nThe AI linter is now enabled for everyone in pro! The AI will highlight suspicious parts of your code in blue. You can also add your own lint rules that you want that are easy to express in natural language but aren't covered by traditional linters.\n\n0.5.1\n\n## [Performance hotfix](https://www.cursor.com/changelog/performance-hotfix)\n\nFixes a performance bug that would happen if you use cmd-k a lot.\n\n0.5.2-nightly\n\n## [Performance hotfix](https://www.cursor.com/changelog/performance-hotfix)\n\nFixes a performance bug that would happen if you use cmd-k a lot.\n\n0.5.1-nightly\n\n## [More robust extension handling](https://www.cursor.com/changelog/more-robust-extension-handling)\n\nMore robust extension handling. You can now use pre-release extensions again.\n\n0.5.0\n\n## [Enterprise subscription support & misc fixes](https://www.cursor.com/changelog/enterprise-subscription-support-misc-fixes)\n\n1. Enterprise support!\n2. C# and F# now properly render in the chat\n3. Qmd support has been restored\n4. Experimental @Codebase support in the chat (and coming to the cmd-k soon!)\n5. Linter is back!\n6. Some fixes to codebase indexing.\n\n0.4.1\n\n## [& 0.4.2 - Hotfixes](https://www.cursor.com/changelog/-0-4-2-hotfixes)\n\nRemoves a check in the chat that slows the chat down in certain cases.\n\n0.4.0\n\n## [\"with codebase\" for all codebases!](https://www.cursor.com/changelog/-with-codebase-for-all-codebases-)\n\nYou can now chat with any codebase. No need to have a Github repo / login through Github.\n\n0.3.1\n\n## [Jupyter CMD-k Context Building](https://www.cursor.com/changelog/jupyter-cmd-k-context-building)\n\nCmd-K can again see all of your cells in Jupyter!\n\n0.3.0\n\n## [SSH and WSL fixes](https://www.cursor.com/changelog/ssh-and-wsl-fixes)\n\n- SSH and WSL should work again\n- Can see recent folders on the new window screen\n- Empty message in chat with codebase context no longer loads forever\n\n0.2.52\n\n## [Bug fix](https://www.cursor.com/changelog/bug-fix)\n\nFixes a bug with CMD-k prompt history that would freeze the input box.\n\n0.2.53-nightly\n\n## [Inline GPT-4 and full-file edits](https://www.cursor.com/changelog/inline-gpt-4-and-full-file-edits)\n\nLet us know what you think!\n\n0.2.52-nightly\n\n## [Updates](https://www.cursor.com/changelog/updates)\n\nHotfixes etc.\n\n0.2.51\n\n## [Bug fixes](https://www.cursor.com/changelog/bug-fixes)\n\nFixes a bug that resulted in green-lines staying around after cancelling CMD-K.\n\n0.2.50\n\n## [Hotfixes](https://www.cursor.com/changelog/hotfixes)\n\n- Cmd-L now properly focuses the chat again\n- Advanced context controls only show up if you have indexed your codebase\n\n0.2.49\n\n## [Advanced context for codebase-wide chat](https://www.cursor.com/changelog/advanced-context-for-codebase-wide-chat)\n\nThis build includes:\n\n- More control of context building abilities for codebase-wide chat\n- A better flow for getting CMD-k to produce code with no linter errors (you should see a \"Try lint-fix\" button when relevant)\n- Some UI/UX tweaks to CMD-K\n- Bug fixes\n\n0.2.51-nightly\n\n## [hanging chat hotfix](https://www.cursor.com/changelog/hanging-chat-hotfix)\n\nThis update fixes the bug where we hang on chat for up to 20s when not in a git repo\n\n0.2.48\n\n## [infinite chat loop hotfix](https://www.cursor.com/changelog/infinite-chat-loop-hotfix)\n\nThis update fixes the infinite loop bug in the chat pane.\n\n0.2.49-nightly\n\n## [Patches](https://www.cursor.com/changelog/patches)\n\n1. Fixed agent editing ability\n2. Fixed issue with in-editor chat\n3. Fixed issues with Cmd + K\n\n0.2.48-nightly\n\n## [Small things!](https://www.cursor.com/changelog/small-things-)\n\n1. Semantic search in Cmd-Shift-F\n2. Some Cmd-K fixes\n3. Pop-out chat! You can now view the chat in an editor, which is great if you're on a small screen.\n\n0.2.47\n\n## [Patch for WSL/SSH (Search and Extensions)](https://www.cursor.com/changelog/patch-for-wsl-ssh-search-and-extensions-)\n\nThis update patches search (Cmd/Win+Shift+F) and many extensions for and WSL and SSH users.\n\n0.2.46\n\n## [Patch for Cmd-k Generates](https://www.cursor.com/changelog/patch-for-cmd-k-generates)\n\nThis update improves the prompt for Cmd-k when you don't have any code selected.\n\n0.2.46-nightly\n\n## [Experimental: interface agent!](https://www.cursor.com/changelog/experimental-interface-agent-)\n\nThis nightly build comes with experimental interface agent support!\n\nThe goal: you write an interface specification, and an agent writes both the tests and the implementation for you. It makes sure that the tests pass, so you don't even need to look at the implementation at all.\n\nWe think this may enable a new kind of programming, that's kind of different to what we're all used to. Please experiment with it and let us know your thoughts in the Discord channel.\n\nHow to use it:\n\n1. It only works in Typescript with vitest or mocha as test runners right now.\n2. Hit Cmd-Shift-I, and give your new interface a name.\n3. Write the methods you want your interface to have.\n4. Hit Cmd-Shift-Enter, and the AI will write the interface for you!\n\n0.2.45\n\n## [ARM Windows Cmd-Shift-F](https://www.cursor.com/changelog/arm-windows-cmd-shift-f)\n\nThis update contains an optimistic patch to Ctrl+Shift+F for ARM Windows computers.\n\n0.2.44\n\n## [Improvements to many features, Fixes to Python](https://www.cursor.com/changelog/improvements-to-many-features-fixes-to-python)\n\n- Improved the \"@Add new doc\" experience\n- Python/Pylance support has been restored\n- Better @ symbol keyboard ergonomics\n- Makes it clearer which docs are being looked at by the AI\n- AI will respond with citations when you refernce docs\n- Fixes Cmd-K for Jupyter\n- Chat/Edit tooltip blocks less code\n- Improves Cursor's appearance when custom themes are on\n- Importing VS Code extensions now takes into account enabled/disabled\n- Cmd-k should work better for long diffs (greater than 100 lines of code)\n\n0.2.44-nightly.3\n\n## [Agents, new docs](https://www.cursor.com/changelog/agents-new-docs)\n\nWelcome to the first nightly release! It comes with agents, which we aren't releasing to the general public yet because we aren't convinced that they are useful. If you like them, please let us know what you use them for!\n\n0.2.43\n\n## [Fix for Cmd+K](https://www.cursor.com/changelog/fix-for-cmd-k)\n\nPatches a few edgecases with Cmd+K.\n\n0.2.42\n\n## [Fix for Cmd+Shift+F (Mac ARM)](https://www.cursor.com/changelog/fix-for-cmd-shift-f-mac-arm-)\n\nFixes the VS Code codebase wide search for Mac ARM users without Rosetta.\n\n0.2.41\n\n## [Hotfix for \"with codebase\"](https://www.cursor.com/changelog/hotfix-for-with-codebase-)\n\nIncludes a fix for the chat \"with codebase\" feature.\n\n0.2.40\n\n## [Release for Linux](https://www.cursor.com/changelog/release-for-linux)\n\nThis build has no changes for Mac and Windows, but fixes a problem for Linux users who can now upgrade to the latest version.\n\n0.2.39\n\n## [New inline edits](https://www.cursor.com/changelog/new-inline-edits)\n\nCmd+K's UI has been changed: it's in-editor, \"sticky,\" and @-symbol-compatible.\nWe hope it helps you stay in flow and more quickly iterate on your prompts.\n(Also, you can now use up/down arrows for history in chat.)\n\nAlso, Cursor's AI will now use popular documentation to improve the answers to your questions. For example, if you ask it \"how do I grab all s3 buckets with boto3?\" it will search over the boto3 docs to find the answer. To add your own documentation or explicitly reference existing docs, type '@library\\_name' in chat.\n\nBug fixes:\n\n1. Long code selections no longer brick the editor\n2. Auto-fixing errors no longer brings up the problems view (in particular, this fixes an annoying bug if you have auto-fix on save turned on)\n\n0.2.37\n\n## [More fixes](https://www.cursor.com/changelog/more-fixes)\n\n- Better @ symbol keyboard ergonomics\n- Fixes a bug where Cmd+K turned off for some users.\n- Better support for extensions (specifically re-enables the welcomeView)\n\n0.2.36\n\n## [Hotfixes](https://www.cursor.com/changelog/hotfixes)\n\n1. Chat works if you don't have a folder open again\n2. Cmd-shift-E to fix an error in chat works again\n3. `cursor://` deep linking works now, so you should be able to log in to extensions\n4. Autoscrolling works again\n5. A few cmd-Z bugs for inline diffs have been squashed\n6. You can now use Run & debug in Cursor again (the toolbar is back)\n7. Early support for slash commands\n8. If you're not logged in, we show the popup to log in again\n9. Cursor is now based on version 1.79.2 of VSCodium, which comes with security updates and minor features\n\n0.2.35\n\n## [Hotfix for Chat](https://www.cursor.com/changelog/hotfix-for-chat)\n\nChat was failing on some non-git folders. That is now fixed.\n\n0.2.34\n\n## [Chat v2](https://www.cursor.com/changelog/chat-v2)\n\nThe chat has been revamped! You can now use @ symbols to show files/code/docs to the AI. The chat history is improved, it's easier to see what the AI can see, and codeblocks auto-format on paste.\n\n0.2.34-nightly.1\n\n## [Diffs in AI linter feedback](https://www.cursor.com/changelog/diffs-in-ai-linter-feedback)\n\nThe AI linter now shows diffs!\n\n0.2.33\n\n## [Azure Support](https://www.cursor.com/changelog/azure-support)\n\nWe've added support for using your Azure OpenAI credentials. Also, small improvements / fixes.\n\n0.2.32\n\n## [Small improvements](https://www.cursor.com/changelog/small-improvements)\n\nSmall fix for a format-on-save bug that was introduced in the last release. Some small improvements to the AI linter and codebase-wide chat.\n\n0.2.31\n\n## [Hotfix for chat focus](https://www.cursor.com/changelog/hotfix-for-chat-focus)\n\nChat should not steal your focus away! This is now fixed.\n\n0.2.30\n\n## [Show the AI documentation](https://www.cursor.com/changelog/show-the-ai-documentation)\n\nYou can now have the AI read documentation on your behalf! This will improve it's ability to answer questions about your favorite libraries. To use this feature, simply press the \"Docs\" button in the top right of the chat pane.\n\n0.2.28\n\n## [& 0.2.29 - Codebase Context fixes](https://www.cursor.com/changelog/-0-2-29-codebase-context-fixes)\n\nHotfixes to v1 of Codebase Context\n\n0.2.27\n\n## [Codebase Context v2](https://www.cursor.com/changelog/codebase-context-v2)\n\nWe've improved codebase context!\n\nIn order to take full advantage, navigate to Settings (top right button), then \"Sync the current codebase\"\n\nLogin via github, then add the repo you wish to sync!\n\nFollowing this, you'll be able to see an improved version of codebase context in the search pane, and in chat (by pressing cmd+enter).\n\n0.2.26\n\n## [Codebase Context v1](https://www.cursor.com/changelog/codebase-context-v1)\n\n### Codebase Context v1\n\nIntroducing v1 of codebase-wide context! We'll be shipping major improvements to this in the next few days, but we'd love to hear your feedback.\n\nGo to the \"Search\" pane in order to see the new context.\n\nOr, on chat, press Cmd+Enter in order to get a response that uses context from the full codebase.\n\n![](https://www.cursor.com/_next/image?url=%2Fassets%2Fimages%2Fchangelog%2FcodebaseContext.gif&w=3840&q=75)\n\nJun 3, 2023\n\n## [v0.2.25 - Hot-fix for extensions (2023-06-03)](https://www.cursor.com/changelog/v0-2-25-hot-fix-for-extensions-2023-06-03-)\n\nAlso potentially fixes the Jupyter problem that many people are experiencing.\n\nJun 2, 2023\n\n## [v0.2.24 - Minor fixes (2023-06-02)](https://www.cursor.com/changelog/v0-2-24-minor-fixes-2023-06-02-)\n\nSmall fixes for the toolformer and the AI linter.\n\nJun 1, 2023\n\n## [v0.2.23 - AI Linting (2023-06-01)](https://www.cursor.com/changelog/v0-2-23-ai-linting-2023-06-01-)\n\nCheck out the \"more\" tab to have GPT-3.5 or GPT-4 review your code periodically for any problems.\n\nMay 20, 2023\n\n## [v0.2.18 - Upgrades to GPT-4 and Please give us feedback!! (2023-05-20)](https://www.cursor.com/changelog/v0-2-18-upgrades-to-gpt-4-and-please-give-us-feedback-2023-05-20-)\n\n### Upgrades to GPT-4\n\n- All users get 10 free gpt-4 requests !!!\n- Switching between models is a lot more easy, and the transition to gpt-4 is a lot smoother\n\n### Please give us feedback!!\n\n![](https://www.cursor.com/_next/image?url=%2Fassets%2Fimages%2Fchangelog%2FfeedbackModal.png&w=3840&q=75)\n\nPlease keep the bug reports rolling! We really are listening!\n\n- We've added a new feedback button at the top right of the app. - We really do\nlisten to your feedback, and your bug reports! We've fixed a lot of bugs in the\nlast few weeks, and we're excited to keep improving the product. - We made this\nmodal to make it easier to report feedback. Please keep the feedback coming!\n\nMay 18, 2023\n\n## [v0.2.17 - Fixes! (2023-05-018)](https://www.cursor.com/changelog/v0-2-17-fixes-2023-05-018-)\n\n### Bug Fixes\n\n- Fixes the \"infinite loading\" bug\n- Reintroduces the \"New AI Project\"\n\nMay 17, 2023\n\n## [v0.2.16 - Terminal Debugger, and our biggest bug bash yet (v0.2.12)](https://www.cursor.com/changelog/v0-2-16-terminal-debugger-and-our-biggest-bug-bash-yet-v0-2-12-)\n\n### In-terminal Debugging\n\n- Press Cmd+D to auto-debug a terminal error\n\n\n\n![](https://www.cursor.com/_next/image?url=%2Fassets%2Fimages%2Fchangelog%2Fautodebug.gif&w=3840&q=75)\n\n- Press Cmd+Shift+L, and the model will add the terminal context to chat\n\n### Activity Bar pinning\n\n- You can Pin custom extensions to your activity bar in the top left\n\n\n\n\n![](https://www.cursor.com/_next/image?url=%2Fassets%2Fimages%2Fchangelog%2FpinnedExtensions.png&w=3840&q=75)\n\n\nHere I've pinned File Explorer, Search, Source Control, and Extensions\n\n\n### Better Jupyter Support\n\n- Context ingestion across a full notebook\n- Small bug fixes\n\n### Diff/Generate improvements\n\n- Partial diff accent/reject\n\n\n\n\n![](https://www.cursor.com/_next/image?url=%2Fassets%2Fimages%2Fchangelog%2FsubDiffs.webp&w=1920&q=75)\n\n\nPressing Cmd+Y/Cmd+N lets you accept/reject subdiffs!\n\n- Generates work when you click elsewhere!\n\n- Fixed diff bug where it edits outside selected region\n\n\n### \ufe0f Quality of Life Improvements\n\n- Press ESC to exit the chat\n- Fixed the bug that shrinks code blocks in the chat!\n- Remote SSH is easier to use!\n- A better Cursor Tutor onboarding!\n- Better prompting for Toolformer\n\nMay 9, 2023\n\n## [v0.2.11 - Enhanced Chat Experience (2023-05-09)](https://www.cursor.com/changelog/v0-2-11-enhanced-chat-experience-2023-05-09-)\n\n### Bug Fixes\n\n- Fixes the \"More\" tab\n- Includes some updates to \"Option+Enter\" in the chat\n\nMay 6, 2023\n\n## [v0.2.10 - Crucial Bug Fixes (2023-05-06)](https://www.cursor.com/changelog/v0-2-10-crucial-bug-fixes-2023-05-06-)\n\n### Bug Fixes\n\n- Hotfix for 2 long-standing bugs:\n\n- Broken chat that persists for a workspace\n- Rarely, pressing Enter in the editor does nothing\n\nMay 4, 2023\n\n## [v0.2.9 - Enhanced Features & Improvements (2023-05-04)](https://www.cursor.com/changelog/v0-2-9-enhanced-features-improvements-2023-05-04-)\n\n### New Features\n\n- One-Click Extension Import from VS Code (beta). As a highly requested feature, we're excited to present the beta version of one-click extension imports!\n- Alpha feature: \ud83e\udde0 Alpha feature: Ask questions about your entire repo \ud83d\udee0\ufe0f. We are experimenting with \u2325+enter in the chat! The feature allows the model to think deeply about your response, search through files, and deliver a well-crafted answer. While it's in alpha, we're working hard to enhance this feature in the coming weeks. We'd love to hear your feedback!\n\n### Bug Fixes\n\n- Improved prompting for edits and generates\n- Fixed login bugs\n- Added the ability to hide the tooltip (Cursor config > Advanced > Chat/Edit Tooltip)\n- Extended prompt length for project generation\n- GPT-4 support now available for project generation\n\nApr 29, 2023\n\n## [v0.2.8 - Multi-File Diffs & Remote SSH (2023-04-29)](https://www.cursor.com/changelog/v0-2-8-multi-file-diffs-remote-ssh-2023-04-29-)\n\n### New Features\n\n- Experimental support for multi-file diffs\n- \ud83c\udf10 Working remote ssh support through the \"OpenRemote - SSH\" extension\n\nApr 19, 2023\n\n## [v0.2.6 - GPT-4 & Project Generation (2023-04-19)](https://www.cursor.com/changelog/v0-2-6-gpt-4-project-generation-2023-04-19-)\n\n### New Features\n\n- GPT-4 now available for Pro users\n\n- 150k GPT-4 tokens included\n- Switch models in settings gear\n- Better quality for all AI features\n\n- New experimental feature: Generate entire projects from a single prompt\n\nApr 17, 2023\n\n## [v0.2.5 - Scroll Bar Hotfix (2023-04-17)](https://www.cursor.com/changelog/v0-2-5-scroll-bar-hotfix-2023-04-17-)\n\n### Bug Fixes\n\n- Hotfix for scroll bars\n\nApr 16, 2023\n\n## [v0.2.4 - Chat Scrolling & Ghost Mode (2023-04-16)](https://www.cursor.com/changelog/v0-2-4-chat-scrolling-ghost-mode-2023-04-16-)\n\n### New Features\n\n- Fixes to scrolling in chat\n- Ghost mode for opting out of storing any kind of data on our servers\n\n### Bug Fixes\n\n- Nicer edits, now work with cmd-Z\n- Various bugs squashed in the streaming diffs\n\nApr 14, 2023\n\n## [v0.2.3 - Enhanced Error Handling (2023-04-14)](https://www.cursor.com/changelog/v0-2-3-enhanced-error-handling-2023-04-14-)\n\n### New Features\n\n- Hover over an error to have the AI explain it/fix it\n\n### Bug Fixes\n\n- Settings icon on Linux\n- Don't install \"cursor\" command on startup\n\n### Coming soon\n\n- GPT-4 support\n\nApr 7, 2023\n\n## [v0.2.2 - Bug Fixes Galore (2023-04-07)](https://www.cursor.com/changelog/v0-2-2-bug-fixes-galore-2023-04-07-)\n\n### Bug Fixes\n\n- Fixes the Mac autoupdating experience\n- \"Undefined uri\" issue fixed\n- Turns off the auto-install of the \"cursor .\" command (and fixes its install altogether)\n\nApr 6, 2023\n\n## [v0.2.1 - More Bug Fixes (2023-04-06)](https://www.cursor.com/changelog/v0-2-1-more-bug-fixes-2023-04-06-)\n\n### Bug Fixes\n\n- Just includes bug fixes\n\nApr 6, 2023\n\n## [v0.2.0 - Introducing Cursor 0.2.0! (2023-04-06)](https://www.cursor.com/changelog/v0-2-0-introducing-cursor-0-2-0-2023-04-06-)\n\n- We've transitioned to building Cursor on top of a fork of VSCodium, moving away from our previous Codemirror-based approach.\n- This allows us to focus on AI features while leveraging VSCode's mature text editing capabilities.\n- Our goal is to create an IDE optimized for pair-programming with AI.\n- While currently similar to a standard code editor with AI features, we plan to evolve the programming experience significantly over time.\n\n### New Features\n\n- Transitioned to building Cursor on top of a fork of VSCodium\n- Focus on enhancing the AI for pair-programming\n\nMar 30, 2023\n\n## [v0.1.12 (2023-03-30)](https://www.cursor.com/changelog/v0-1-12-2023-03-30-)\n\n### New Features\n\n- AI now requires login\n- Use an OpenAI API key for unlimited requests at cost (GPT-4 access if available)\n\n### Bug Fixes\n\n- Cleaned up chat styling\n- Other small changes\n\nMar 28, 2023\n\n## [v0.1.11 (2023-03-28)](https://www.cursor.com/changelog/v0-1-11-2023-03-28-)\n\n### Bug Fixes\n\n- Tiny bug fix for terminal\n\nMar 28, 2023\n\n## [v0.1.10 (2023-03-28)](https://www.cursor.com/changelog/v0-1-10-2023-03-28-)\n\n### Bug Fixes\n\n- Tiny fix for some keyboard shortcut problems\n- Other bits of polish\n\nMar 27, 2023\n\n## [v0.1.9 (2023-03-27)](https://www.cursor.com/changelog/v0-1-9-2023-03-27-)\n\n### New Features\n\n- Opens the terminal in your current folder\n- Adds an optional paid plan if you'd like to avoid the server capacity rate limits\n\n### Bug Fixes\n\n- Changes autoupdate to notify you when there's a new version\n- Other fixes\n\nMar 25, 2023\n\n## [v0.1.7 (2023-03-25)](https://www.cursor.com/changelog/v0-1-7-2023-03-25-)\n\n### New Features\n\n- Fuzzy search for file names\n\n### Bug Fixes\n\n- Fixes glitches with the terminal\n- Scrollbars work\n- Other fixes (many from PRs \ud83d\ude42)\n\nMar 24, 2023\n\n## [v0.1.6 (2023-03-24)](https://www.cursor.com/changelog/v0-1-6-2023-03-24-)\n\n### Bug Fixes\n\n- Fix to the hotkeys\n\nMar 23, 2023\n\n## [v0.1.5 (2023-03-23)](https://www.cursor.com/changelog/v0-1-5-2023-03-23-)\n\n### New Features\n\n- Automatically apply chat suggestion\n- Ask AI to \"fix\" language errors\n- Chat history saved between sessions\n\n### Bug Fixes\n\n- Easy to select and copy from chat\n- Resizable sidebar\n- Terminal no longer interferes with chat\n\n### Coming soon\n\n- Fixes to all the language servers/copilot\n\nMar 18, 2023\n\n## [v0.1.2-0.1.3 (2023-03-18)](https://www.cursor.com/changelog/v0-1-2-0-1-3-2023-03-18-)\n\n### New Features\n\n- Built-in terminal\n- Diffs automatically continue\n\n### Bug Fixes\n\n- More diff fixes\n- Up and down arrow in prompt bar have been mapped to less annoying keybindings\n- Can open chat history from the prompt bar\n\n### Coming soon\n\n- Have chat auto-insert suggested changes into editor\n\nMar 14, 2023\n\n## [v0.0.37 (2023-03-14)](https://www.cursor.com/changelog/v0-0-37-2023-03-14-)\n\n### New Features\n\n- Windows and Linux support \ud83e\udd73\n- Edits can be as long as you'd like\n\n### Bug Fixes\n\n- Diffs shouldn't disappear anymore\n- Editing works for same file on multiple tabs\n\n### Coming soon\n\n- Instant fix all lint errors with AI \ud83d\ude0e",
    "metadata": {
        "title": "Changelog | Cursor - The AI Code Editor",
        "og:image:height": "630",
        "og:image": "https://www.cursor.com/_next/static/media/opengraph-image.7a8fd201.png",
        "twitter:title": "Changelog | Cursor - The AI Code Editor",
        "viewport": "width=device-width, initial-scale=1",
        "favicon": "https://www.cursor.com/favicon-48x48.png",
        "twitter:card": "summary_large_image",
        "twitter:image:width": "1200",
        "apple-mobile-web-app-title": "Cursor",
        "twitter:description": "New updates and improvements.",
        "theme-color": "var(--background)",
        "og:title": "Changelog | Cursor - The AI Code Editor",
        "og:image:width": "1200",
        "twitter:image:alt": "Cursor - The AI Code Editor",
        "ogImage": "https://www.cursor.com/_next/static/media/opengraph-image.7a8fd201.png",
        "twitter:image": "https://www.cursor.com/_next/static/media/opengraph-image.7a8fd201.png",
        "ogTitle": "Changelog | Cursor - The AI Code Editor",
        "ogDescription": "New updates and improvements.",
        "og:description": "New updates and improvements.",
        "twitter:image:height": "630",
        "language": "en",
        "description": "New updates and improvements.",
        "og:image:alt": "Cursor - The AI Code Editor",
        "next-size-adjust": "",
        "scrapeId": "d4bb5ace-34b2-42b8-9541-b58548679448",
        "sourceURL": "https://www.cursor.com/changelog",
        "url": "https://www.cursor.com/en/changelog",
        "statusCode": 200
    }
}